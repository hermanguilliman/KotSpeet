# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
from aiogram_dialog import Dialog, Window, DialogManager
from aiogram_dialog.widgets.kbd import Button, Group, Row
from aiogram_dialog.widgets.text import Const, Format
from tgbot.states.main_menu_states import MainState
from aiogram.types import CallbackQuery, ParseMode
from tgbot.states.reset_timer_state import ResetTimer
from tgbot.states.set_timer_states import TimerState
from tgbot.getters.main_menu_getter import get_main_menu_data
from loguru import logger
from .helper import bolder


async def set_off_timer(c: CallbackQuery,
                        button: Button,
                        manager: DialogManager,
                        *args, **kwargs):
    jobs = manager.current_context().dialog_data.get("jobs")
    if jobs and jobs > 0:
        await c.message.reply("üîí –ó–∞–¥–∞—á–∞ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞! –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª–∏—Ç–µ –∞–∫—Ç–∏–≤–Ω—É—é –∑–∞–¥–∞—á—É üîí")
    else:
        await manager.start(TimerState.preset_time_state)


async def set_reboot_timer(c: CallbackQuery,
                           button: Button,
                           manager: DialogManager,
                           *args, **kwargs):
    jobs = manager.current_context().dialog_data.get("jobs")
    if jobs and jobs > 0:
        await c.message.reply("üîí –ó–∞–¥–∞—á–∞ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞! –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª–∏—Ç–µ –∞–∫—Ç–∏–≤–Ω—É—é –∑–∞–¥–∞—á—É üîí")
    else:
        await manager.start(TimerState.preset_time_state)


async def reset_timer(c: CallbackQuery,
                      button: Button,
                      manager: DialogManager,
                      *args, **kwargs):
    jobs = manager.current_context().dialog_data.get("jobs")
    if jobs and jobs == 0:
        await c.message.reply('–ù–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å')
        logger.debug('–ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á')
    else:
        await manager.start(ResetTimer.reset_timer_request)


# –ö–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é. –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –µ—Å–ª–∏ –µ—Å—Ç—å –∑–∞–¥–∞—á–∏
buttons = Group(
    Row(
        Button(Const("‚è± –¢–∞–π–º–µ—Ä –≤—ã–∫–ª—é—á–µ–Ω–∏—è"), id='set_off_timer', on_click=set_off_timer),
        Button(Const("üíª –¢–∞–π–º–µ—Ä –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏"), id='set_reboot_timer', on_click=set_reboot_timer),

    ),
    Row(
        Button(Format("üôÖ‚Äç‚ôÇÔ∏è –£–¥–∞–ª–∏—Ç—å —Ç–∞–π–º–µ—Ä—ã"),
               id='reset_timer',
               when='jobs',
               on_click=reset_timer,
               ),
    )
)

main_menu = Dialog(
    Window(
        Const(bolder("–≠—Ç–æ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω. –ß—Ç–æ –∂–µ–ª–∞–µ—Ç–µ? üò∫")),
        Format(bolder('–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –∑–∞–¥–∞—á: {jobs}'), when='jobs'),
        buttons,
        state=MainState.central_state,
        getter=get_main_menu_data,
        parse_mode=ParseMode.HTML
    ),
)
